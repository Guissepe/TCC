{"version":3,"sources":["src/pages/Home/styles.ts","src/pages/Home/Form.tsx","src/pages/Home/index.tsx","src/pages/Regist/styles.ts","src/pages/Regist/Forms.tsx","src/pages/Regist/index.tsx","src/pages/Mapa/mockData.ts","src/pages/Mapa/mapaleaf.tsx","src/pages/Mapa/index.tsx","src/routes/app.routes.tsx","src/routes/index.tsx","index.js","src/App.tsx"],"names":["Header","styled","Text","Button","TouchableOpacity","InputEmail","TextInput","InputPass","LogInfo","Body","View","i18n","translations","en","Login","InfoLog","Register","infoReg","ja","ptBR","locale","fallbacks","initialValues","email","password","validate","values","errors","test","onSubmit","console","log","handleChange","handleBlur","handleSubmit","t","onChangeText","onBlur","value","onPress","Form","InputPassword","InputName","name","Regist","mapShapes","mapMarkers","mapLayers","attribution","baseLayerIsChecked","baseLayerName","layerType","url","baseLayer","mapOptions","attributionControl","zoomControl","Platform","OS","initialPosition","lat","lng","styles","StyleSheet","create","searchbox","backgroundColor","borderRadius","position","top","right","search","flex","width","height","container","header","paddingHorizontal","paddingTop","headerText","color","fontSize","fontWeight","mapControls","bottom","flexDirection","justifyContent","left","marginHorizontal","padding","mapButton","alignItems","mapButtonEmoji","Map","useState","zoom","setZoom","mapCenterPosition","setMapCenterPosition","ownPosition","setOwnPosition","useEffect","a","async","Location","status","warn","location","coords","latitude","longitude","getLocationAsync","catch","error","SafeAreaView","style","loadingIndicator","ActivityIndicator","maxZoom","onMessage","message","tag","Alert","alert","mapMarkerId","mapCenter","includes","title","Mapa","AppRoutes","Drawer","Group","Screen","component","createDrawerNavigator","screenOptions","headerStyle","headerTintColor","Routes","NavigationContainer","Navigator","initialRouteName","registerRootComponent"],"mappings":"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","file":"static/js/app.f2614a9c.chunk.js","sourcesContent":["import styled from 'styled-components/native';\n\n\n    export const Header = styled.Text `\n    color: #b6bbc4;\n    font-size: 12vw;\n    padding-left: 30%;\n    padding-right: 25%;\n    padding-top: 20%;\n    ` ;\n    export const Button = styled.TouchableOpacity `\n\n    text-align: center;\n    font-size: 16vw;\n    height: 16vw;\n    margin-top: 8vw;\n    background-color: #117bdf;\n    width: 75vw;\n    border-radius: 12px;\n    font-family: -apple-system white;\n    margin-left: 13vw;\n    `;\n    export const InputEmail = styled.TextInput`\n    font-size: 12pw;\n    padding: 2vw;\n    margin: 2vw;\n    color: #313d4f;\n    background: #192737;\n    border-color: #313d4f;\n    border: 1px;\n    border: solid;\n    height: 20vw;\n    border-radius: 12px;\n    `;\n\n    export const InputPass = styled.TextInput`\n    font-size: 12pw;\n    padding: 2vw;\n    margin: 2vw;\n    color: #313d4f;\n    background: #192737;\n    border-color: #313d4f;\n    border: 1px;\n    border: solid;\n    height: 20vw;\n    border-radius: 12px;\n    `;\n    export const LogInfo = styled.Text`\n     color: #313d4f;\n    font-family: BlinkMacSystemFont;\n    padding-top: 30px;\n    padding-left: 15%;\n    padding-bottom: 60px;\n    font-size: 6vw;\n `;\n    export const Body = styled.View`\n    background: #000810;\n      flex: 1;\n    `;\n    export const ButtonText = styled.Text`\n    padding-top:10px;\n    padding-left:35%;\n    font-size: 30px;\n    `;\n      export const ForgotPassword = styled.TouchableOpacity`\n      color: #b6bbc4;\n      padding-top: 30px;\n      padding-left: 10%;\n      font-family: -apple-system white\n\n    `;\n\n\n","import React from 'react';\nimport {Text, useWindowDimensions, Dimensions, View } from 'react-native';\nimport {Header, Button, LogInfo, Body, ButtonText, ForgotPassword, InputPass, InputEmail} from './styles'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Localization from 'expo-localization';\nimport i18n from 'i18n-js';\n\ni18n.translations = {\n  en: { Login: 'Login',\n  InfoLog: 'Enter your account here!',\n  Register: 'Register',\n  infoReg: 'Create a new account here!'\n  },\n  ja: { Login: 'こんにちは',\n  InfoLog: 'flksajdflkasdf',\n  Register: 'こんにちは',\n  infoReg: 'flksajdflkasdf'\n  },\n  ptBR: { Login: 'Login',\n  InfoLog: 'Entre na sua conta aqui',\n  Register: 'Registre se',\n  infoReg: 'Crie sua conta aqui'\n  },\n};\n\ni18n.locale = 'en';\n\ni18n.fallbacks = true;\n\nexport default () => (\n  <Formik\n    initialValues={{ email: 'ahaha', password: 'F you' }}\n    validate={values => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = 'Invalid email address';\n      }\n      return errors;\n    }}\n    onSubmit={values => console.log(values)}\n  >\n    {({ handleChange, handleBlur, handleSubmit, values }) => (\n      <Body>\n        <Header > {i18n.t('Login')} </Header>\n        <LogInfo> {i18n.t('InfoLog')} </LogInfo>\n        <InputEmail\n          onChangeText={handleChange('email')}\n          onBlur={handleBlur('email')}\n          value={values.email}\n        />\n          <InputPass\n          onChangeText={handleChange('password')}\n          onBlur={handleBlur('password')}\n          value={values.password}\n        />\n        <Button onPress={() => handleSubmit()}/>\n      </Body>\n    )}\n  </Formik>\n);\n\n\n\n\n\n\n\n\n          //  <Header > Log in </Header>\n          //   <LogInfo> Create a new account here!</LogInfo>\n          //   <Input placeholder=\"Email\" onChangeText={(email) => setEmail(email)}></Input>\n          //   <Text></Text>\n          //   <Input  placeholder=\"Senha\" onChangeText={(password) => setPassword(password)}></Input>\n          //   <Text></Text>\n\n          //   <ForgotPassword ><Text style={{color: 'lightgray', fontSize: 20}}>Esqueci minha senha</Text></ForgotPassword>\n          //   <Button><Text style={{color: 'Black', fontSize: 25, padding: 15}}> Login </Text></Button>\n\n\n\n\n\n// import React, {useState} from 'react';\n// import {Text, useWindowDimensions, Dimensions, View } from 'react-native';\n// import {Header, Button, LogInfo, Body, ButtonText, ForgotPassword, InputPass, Inputemail} from './styles'\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Localization from 'expo-localization';\n// // import { Conections } from './Props'\n// import i18n from 'i18n-js';\n// import translations from './Translations';\n\n\n\n// function Login() {\n\n//   // Conections(props);\n\n// // const [email, setEmail] = useState(\"\");\n// // const [password, setPassword] = useState(\"\");\n// // const [logado, setLogado] = useState(false);\n// const windowWidth = Dimensions.get('window').width;\n// const windowHeight = Dimensions.get('window').height;\n\n\n//   return (\n//     <Body>\n//       <Header > Log in </Header>\n//     <LogInfo> {i18n.t('food')} </LogInfo>\n//     <Inputemail placeholder=\"Email\"></Inputemail>\n//     <Text></Text>\n//     <InputPass  placeholder=\"Senha\"></InputPass>\n//     <Text></Text>\n//     <ForgotPassword ><Text style={{color: 'lightgray', fontSize: 20}}>Esqueci minha senha</Text></ForgotPassword>\n//     <Button ><Text style={{color: 'Black', fontSize: 25, padding: 15}}> Login </Text></Button>\n\n//     <Formik\n//        initialValues={{ email: '', password: '' }}\n\n//        validate={values => {\n//          const errors = {};\n//          if (!values.email) {\n//            errors.email = 'Required';\n//          } else if (\n//            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n//          ) {\n//            errors.email = 'Invalid email address';\n//          }\n//          return errors;\n//        }}\n//        onSubmit={(values, { setSubmitting }) => {\n//          setTimeout(() => {\n//            console.log(JSON.stringify(values, null, 2));\n//            setSubmitting(false);\n//          }, 400);\n//        }}\n//     >\n//        {({ isSubmitting }) => (\n//          <Form>\n//            <Field type=\"email\" name=\"email\" />\n//            <ErrorMessage name=\"email\" component=\"div\" />\n//            <Field type=\"password\" name=\"password\" />\n//            <ErrorMessage name=\"password\" component=\"div\" />\n//            <button type=\"submit\" disabled={isSubmitting}>\n//              Submit\n//            </button>\n//          </Form>\n//        )}\n//     </Formik>\n//   </Body>\n//   )\n// }\n\n\n","import Form from './Form';\nexport default function Login() {\n  return(\n    <Form/>\n  )\n}\n","import styled from 'styled-components/native';\n\n    export const Header = styled.Text `\n    color: #b6bbc4;\n    font-size: 300%;\n    padding-left: 28%;\n    padding-right: 25%;\n    padding-top: 15%;\n    ` ;\n    export const Button = styled.TouchableOpacity`\n    font-size: 16vw;\n    height: 16vw;\n    margin-top: 8vw;\n    background-color: #117bdf;\n    width: 75vw;\n    border-radius: 12px;\n    font-family: -apple-system white;\n    margin-left: 13vw;\n    `;\n\n    export const InputEmail = styled.TextInput`\n    ::placeholder {\n      color: red;\n    }\n    font-size: 12pw;\n    padding: 2vw;\n    margin: 2vw;\n    color: #313d4f;\n    background: #192737;\n    border-color: #313d4f;\n    border: 1px;\n    border: solid;\n    height: 20vw;\n    border-radius: 12px;\n    `;\n      export const InputPassword = styled.TextInput`\n      ::placeholder {\n        color: red;\n      }\n      font-size: 12pw;\n      padding: 2vw;\n      margin: 2vw;\n      color: #313d4f;\n      background: #192737;\n      border-color: #313d4f;\n      border: 1px;\n      border: solid;\n      height: 20vw;\n      border-radius: 12px;\n      `;\n      export const InputName = styled.TextInput`\n      ::placeholder {\n        color: red;\n      }\n      font-size: 12pw;\n      padding: 2vw;\n      margin: 2vw;\n      color: #313d4f;\n      background: #192737;\n      border-color: #313d4f;\n      border: 1px;\n      border: solid;\n      height: 20vw;\n      border-radius: 12px;\n      `;\n    export const LogInfo = styled.Text`\n     color: #313d4f;\n    font-family: BlinkMacSystemFont;\n    padding-top: 30px;\n    padding-left: 20%;\n    padding-bottom: 60px;\n    font-size: 150%;\n `;\n    export const Body = styled.View`\n    background: #000810;\n    flex: 1;\n    height: 100%;\n    width: 100%;\n\n    `;\n    export const ButtonText = styled.Text`\n    padding-top:10px;\n    padding-left:35%;\n    font-size: 30px;\n    `;\n","import React , {useState}from 'react';\nimport { Formik } from 'formik';\nimport {Text, useWindowDimensions, Dimensions, View } from 'react-native';\nimport {Header, Button, LogInfo, Body, ButtonText, InputPassword, InputEmail, InputName} from './styles'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Localization from 'expo-localization';\nimport i18n from 'i18n-js';\n\ni18n.translations = {\n  en: { Login: 'Login',\n  InfoLog: 'Enter your account here!',\n  Register: 'Register',\n  infoReg: 'Create a new account here!'\n  },\n  ja: { Login: 'こんにちは',\n  InfoLog: 'flksajdflkasdf',\n  Register: 'こんにちは',\n  infoReg: 'flksajdflkasdf'\n  },\n  ptBR: { Login: 'Login',\n  InfoLog: 'Entre na sua conta aqui',\n  Register: 'Registre se',\n  infoReg: 'Crie sua conta aqui'\n  },\n};\n\n\ni18n.locale = 'en';\n\ni18n.fallbacks = true;\n\n\nexport default () => (\n  <Formik\n    initialValues={{ email: 'ahaha', password: 'F you' , name: 'no'}}\n    validate={values => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = 'Invalid email address';\n      }\n      return errors;\n    }}\n    onSubmit={values => console.log(values)}\n  >\n    {({ handleChange, handleBlur, handleSubmit, values }) => (\n      <Body>\n        <Header > {i18n.t('Register')} </Header>\n        <LogInfo> {i18n.t('infoReg')} </LogInfo>\n        <InputName\n          onChangeText={handleChange('name')}\n          onBlur={handleBlur('name')}\n          value={values.name}\n        />\n          <InputEmail\n          onChangeText={handleChange('email')}\n          onBlur={handleBlur('email')}\n          value={values.email}\n        />\n          <InputPassword\n          onChangeText={handleChange('password')}\n          onBlur={handleBlur('password')}\n          value={values.password}\n        />\n          <InputPassword\n          onChangeText={handleChange('password')}\n          onBlur={handleBlur('password')}\n          value={values.password}\n        />\n        <Button onPress={() => handleSubmit()}/>\n      </Body>\n    )}\n  </Formik>\n);\n","import React , {useState}from 'react';\nimport { Formik } from 'formik';\nimport {Text, useWindowDimensions, Dimensions, View } from 'react-native';\nimport {Header, Button, LogInfo, Body, ButtonText, InputPassword, InputEmail} from './styles'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Localization from 'expo-localization';\nimport i18n from 'i18n-js';\nimport Form from './Forms';\n\n\nexport default function Regist() {\n      return(\n        <Form/>\n      )\n}\n","import { MapMarker, MapShape } from 'expo-leaflet'\r\n\r\nexport const circle: MapShape = {\r\n  shapeType: 'circle',\r\n  color: '#123123',\r\n  id: '1',\r\n  center: { lat: 34.225727, lng: -77.94471 },\r\n  radius: 2000,\r\n}\r\n\r\nexport const circleMarker: MapShape = {\r\n  shapeType: 'circle',\r\n  color: 'red',\r\n  id: '2',\r\n  center: { lat: 38.437424, lng: -78.867912 },\r\n  radius: 15,\r\n}\r\n\r\nexport const polygon: MapShape = {\r\n  shapeType: 'polygon',\r\n  color: 'blue',\r\n  id: '3',\r\n  positions: [\r\n    { lat: 38.80118939192329, lng: -74.69604492187501 },\r\n    { lat: 38.19502155795575, lng: -74.65209960937501 },\r\n    { lat: 39.07890809706475, lng: -71.46606445312501 },\r\n  ],\r\n}\r\n\r\nexport const multiPolygon: MapShape = {\r\n  shapeType: 'polygon',\r\n  color: 'violet',\r\n  id: '4',\r\n  positions: [\r\n    [\r\n      { lat: 37.13842453422676, lng: -74.28955078125001 },\r\n      { lat: 36.4433803110554, lng: -74.26208496093751 },\r\n      { lat: 36.43896124085948, lng: -73.00964355468751 },\r\n      { lat: 36.43896124085948, lng: -73.00964355468751 },\r\n    ],\r\n    [\r\n      { lat: 37.505368263398104, lng: -72.38891601562501 },\r\n      { lat: 37.309014074275915, lng: -71.96594238281251 },\r\n      { lat: 36.69044623523481, lng: -71.87805175781251 },\r\n      { lat: 36.58024660149866, lng: -72.75146484375001 },\r\n      { lat: 37.36579146999664, lng: -72.88330078125001 },\r\n    ],\r\n  ],\r\n}\r\n\r\nexport const polyline: MapShape = {\r\n  shapeType: 'polyline',\r\n  color: 'orange',\r\n  id: '5',\r\n  positions: [\r\n    { lat: 35.411438052435486, lng: -78.67858886718751 },\r\n    { lat: 35.9602229692967, lng: -79.18945312500001 },\r\n    { lat: 35.97356075349624, lng: -78.30505371093751 },\r\n  ],\r\n}\r\n\r\nexport const multiPolyline: MapShape = {\r\n  shapeType: 'polyline',\r\n  color: 'purple',\r\n  id: '5a',\r\n  positions: [\r\n    [\r\n      { lat: 36.36822190085111, lng: -79.26086425781251 },\r\n      { lat: 36.659606226479696, lng: -79.28833007812501 },\r\n      { lat: 36.721273880045004, lng: -79.81018066406251 },\r\n    ],\r\n    [\r\n      { lat: 35.43381992014202, lng: -79.79370117187501 },\r\n      { lat: 35.44277092585766, lng: -81.23840332031251 },\r\n      { lat: 35.007502842952896, lng: -80.837402343750017 },\r\n    ],\r\n  ],\r\n}\r\n\r\nexport const rectangle: MapShape = {\r\n  shapeType: 'rectangle',\r\n  color: 'yellow',\r\n  id: '6',\r\n  bounds: [\r\n    [36.5, -75.7],\r\n    [38.01, -73.13],\r\n  ],\r\n}\r\n\r\nexport const mapShapes: Array<MapShape> = [\r\n  // {\r\n  //   shapeType: 'circle',\r\n  //   color: '#123123',\r\n  //   id: '1',\r\n  //   center: { lat: 34.225727, lng: -77.94471 },\r\n  //   radius: 2000,\r\n  // },\r\n  // {\r\n  //   shapeType: 'circleMarker',\r\n  //   color: '#dd2245',\r\n  //   id: '2',\r\n  //   center: { lat: 38.437424, lng: -78.867912 },\r\n  //   radius: 15,\r\n  // },\r\n  // {\r\n  //   shapeType: 'polygon',\r\n  //   color: '#4545dd',\r\n  //   id: '3',\r\n  //   positions: [\r\n  //     { lat: 38.80118939192329, lng: -74.69604492187501 },\r\n  //     { lat: 38.19502155795575, lng: -74.65209960937501 },\r\n  //     { lat: 39.07890809706475, lng: -71.46606445312501 },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   shapeType: 'polygon',\r\n  //   color: '#25cc25',\r\n  //   id: '4',\r\n  //   positions: [\r\n  //     [\r\n  //       { lat: 37.13842453422676, lng: -74.28955078125001 },\r\n  //       { lat: 36.4433803110554, lng: -74.26208496093751 },\r\n  //       { lat: 36.43896124085948, lng: -73.00964355468751 },\r\n  //       { lat: 36.43896124085948, lng: -73.00964355468751 },\r\n  //     ],\r\n  //     [\r\n  //       { lat: 37.505368263398104, lng: -72.38891601562501 },\r\n  //       { lat: 37.309014074275915, lng: -71.96594238281251 },\r\n  //       { lat: 36.69044623523481, lng: -71.87805175781251 },\r\n  //       { lat: 36.58024660149866, lng: -72.75146484375001 },\r\n  //       { lat: 37.36579146999664, lng: -72.88330078125001 },\r\n  //     ],\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   shapeType: 'polyline',\r\n  //   color: 'orange',\r\n  //   id: '5',\r\n  //   positions: [\r\n  //     { lat: 35.411438052435486, lng: -78.67858886718751 },\r\n  //     { lat: 35.9602229692967, lng: -79.18945312500001 },\r\n  //     { lat: 35.97356075349624, lng: -78.30505371093751 },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   shapeType: 'polyline',\r\n  //   color: 'purple',\r\n  //   id: '6',\r\n  //   positions: [\r\n  //     [\r\n  //       { lat: 36.36822190085111, lng: -79.26086425781251 },\r\n  //       { lat: 36.659606226479696, lng: -79.28833007812501 },\r\n  //       { lat: 36.721273880045004, lng: -79.81018066406251 },\r\n  //     ],\r\n  //     [\r\n  //       { lat: 35.43381992014202, lng: -79.79370117187501 },\r\n  //       { lat: 35.44277092585766, lng: -81.23840332031251 },\r\n  //       { lat: 35.007502842952896, lng: -80.837402343750017 },\r\n  //     ],\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   shapeType: 'rectangle',\r\n  //   color: 'yellow',\r\n  //   id: '6',\r\n  //   bounds: [\r\n  //     [36.5, -75.7],\r\n  //     [38.01, -73.13],\r\n  //   ],\r\n  // },\r\n]\r\n\r\nexport const mapMarkers: MapMarker[] = [\r\n  // {\r\n  //   id: '1',\r\n  //   position: { lat: 36.46410354, lng: -75.6432701 },\r\n  //   icon: '📍',\r\n  //   size: [32, 32],\r\n  // },\r\n  // {\r\n  //   id: '2',\r\n  //   position: { lat: 37.06452161, lng: -75.67364786 },\r\n  //   icon: '😴',\r\n  //   size: [64, 64],\r\n  // },\r\n  // {\r\n  //   id: '3',\r\n  //   position: { lat: 36.46410354, lng: -75.6432701 },\r\n  //   icon: 'https://www.catster.com/wp-content/uploads/2018/07/Savannah-cat-long-body-shot.jpg',\r\n  //   size: [32, 32],\r\n  // },\r\n  // {\r\n  //   id: '4',\r\n  //   position: { lat: 37.23310632, lng: -76.23518332 },\r\n  //   icon: `\r\n  //   <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  //     <path d=\"M11.9 1a8.6 8.6 0 00-8.6 8.6c0 4.35 7.2 12.05 8.42 13.33a.24.24 0 00.35 0c1.22-1.27 8.42-9 8.42-13.33A8.6 8.6 0 0011.9 1zm0 11.67A3.07 3.07 0 1115 9.6a3.07 3.07 0 01-3.1 3.07z\"/>\r\n  //   </svg>\r\n  //   `,\r\n  //   size: [24, 24],\r\n  // },\r\n]\r\n","import { ExpoLeaflet } from 'expo-leaflet'\nimport * as Location from 'expo-location'\nimport type { LatLngLiteral } from 'leaflet'\nimport React, { useEffect, useState } from 'react'\nimport 'react-modern-drawer/dist/index.css'\n\n// import { Button } from './styles'\nimport {\n  ActivityIndicator,\n  Alert,\n  Button,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n} from 'react-native'\nimport { MapLayer } from 'expo-leaflet'\nimport { mapMarkers, mapShapes } from './mockData'\n\n\nconst mapLayers: Array<MapLayer> = [\n  {\n    attribution:\n      '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    baseLayerIsChecked: true,\n    baseLayerName: 'OpenStreetMap',\n    layerType: 'TileLayer',\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  },\n  {\n    baseLayerIsChecked: true,\n    baseLayer: true,\n    baseLayerName: 'Mapbox',\n    layerType: 'TileLayer',\n    url: `https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoid2hlcmVzbXl3YXZlcyIsImEiOiJjanJ6cGZtd24xYmU0M3lxcmVhMDR2dWlqIn0.QQSWbd-riqn1U5ppmyQjRw`,\n  },\n]\n\nconst mapOptions = {\n  attributionControl: false,\n  zoomControl: Platform.OS === 'web',\n}\n\nconst initialPosition = {\n  lat: -25.74922656712633,\n  lng: -53.06181907653809\n}\n\nconst styles = StyleSheet.create({\n  searchbox:{\n    backgroundColor: '#d1d1d1',\n    borderRadius: 10,\n    position: 'absolute',\n    top: '10%',\n    right: '7%',\n  },\n  search: {\n    backgroundColor: '#ffffff',\n    flex: 0.1,\n    width: '90%',\n    height: '8vw',\n    borderRadius: 20,\n\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#050505',\n    position: 'relative',\n  },\n  header: {\n    height: 60,\n    backgroundColor: 'dodgerblue',\n    paddingHorizontal: 10,\n    paddingTop: 30,\n    width: '100%',\n  },\n  headerText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  mapControls: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    borderRadius: 5,\n    bottom: 25,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    left: 0,\n    marginHorizontal: 10,\n    padding: 7,\n    right: 0,\n\n  },\n  mapButton: {\n    alignItems: 'center',\n    height: 42,\n    justifyContent: 'center',\n    width: 42,\n  },\n  mapButtonEmoji: {\n    fontSize: 28,\n  },\n})\n\nfunction Map() {\n  const [zoom, setZoom] = useState(14)\n  const [mapCenterPosition, setMapCenterPosition] = useState(initialPosition)\n  const [ownPosition, setOwnPosition] = useState<null | LatLngLiteral>(null)\n\n  useEffect(() => {\n    const getLocationAsync = async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync()\n      if (status !== 'granted') {\n        console.warn('Permission to access location was denied')\n      }\n\n      let location = await Location.getCurrentPositionAsync({})\n      if (!ownPosition) {\n        setOwnPosition({\n          lat: location.coords.latitude,\n          lng: location.coords.longitude,\n        })\n      }\n    }\n\n    getLocationAsync().catch((error) => {\n      console.error(error)\n    })\n  }, [])\n\n  return (\n\n    <SafeAreaView style={styles.container}>\n      <View style={{ flex: 1, position: 'relative' }}>\n        <ExpoLeaflet\n          loadingIndicator={() => <ActivityIndicator />}\n          mapCenterPosition={mapCenterPosition}\n\n          mapLayers={mapLayers}\n          mapMarkers={mapMarkers}\n          mapOptions={mapOptions}\n          mapShapes={mapShapes}\n          maxZoom={20}\n          onMessage={(message) => {\n            switch (message.tag) {\n              case 'onMapMarkerClicked':\n                Alert.alert(\n                  `Map Marker Touched, ID: ${message.mapMarkerId || 'unknown'}`,\n                )\n                break\n              case 'onMapClicked':\n                Alert.alert(\n                  `Map Touched at:`,\n                  `${message.location.lat}, ${message.location.lng}`,\n                )\n                break\n              case 'onMoveEnd':\n                setMapCenterPosition(message.mapCenter)\n                break\n              case 'onZoomEnd':\n                setZoom(message.zoom)\n                break\n              default:\n                if (['onMove'].includes(message.tag)) {\n                  return\n                }\n                console.log(message)\n            }\n          }}\n          zoom={zoom}\n        />\n\n      </View>\n      <Button\n        onPress={() => {\n          setMapCenterPosition(initialPosition)\n          setZoom(14)\n        }}\n        title=\"Reset Map\"\n      />\n      <View style={styles.searchbox}>\n        <TextInput style={styles.search}/>\n\n      </View>\n\n\n    </SafeAreaView>\n  )\n}\n\nexport default Map;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// {lat: -25.74936185614262, lng: -53.052849769592285},\n//         {lat: -25.748588633834604, lng: -53.052492103915796},\n//         {lat: -25.748298866864353, lng: -53.0555641651123},\n//         {lat: -25.749313538654487, lng: -53.06108951568604},\n//         {lat: -25.74928454815217, lng: -53.06111097335816},\n//         {lat: -25.745187152664922, lng: -53.062033653259284},\n//         {lat: -25.738248316362302, lng: -53.06370735168458},\n//         {lat: -25.736354078953365, lng: -53.05349349975587},\n//         {lat: -25.73634441439938, lng: -53.05250644683838},\n//         {lat: -25.73829663835028, lng: -53.052034378051765},\n//         {lat: -25.739968567034165, lng: -53.06053161621094},\n//         {lat: -25.742577888498243, lng: -53.05995225906373},\n//         {lat: -25.742249310430076, lng: -53.05713057518006},\n//         {lat: -25.74242326363417, lng: -53.05707693099976},\n\n//     return (\n\n//         </Marker>\n//         <Marker position={[ -25.75433845215439,-53.07014748529735]}></Marker>\n//         <Marker position={[-25.74242326363417, -53.05707693099976]}></Marker>\n//         <Marker position={[-25.752744252179628, -53.058065781908915]}></Marker>\n//         <Marker position={[ -25.752744252179628, -53.058065781908915]}></Marker>\n//         <Marker position={[-25.752744252179628, -53.058065781908915]}></Marker>\n//         <Marker position={[-25.752715055574416, -53.05791027244841]}></Marker>\n//         <Marker position={[-25.751502314836518, -53.05772264380956]}></Marker>\n//         <Marker position={[-25.75143467156226, -53.057765530355574]}></Marker>\n//         <Marker position={[-25.750685761308624, -53.05383605057636]}></Marker>\n//         <Marker position={[-25.75078239515508, -53.05380388566684]}></Marker>\n//         <Marker position={[-25.74934252914973, -53.0517339706421]}></Marker>\n//         <Marker position={[-25.743737568535213, -53.068492412567146]}></Marker>\n//         <Marker position={[-25.733821938942054, -53.07111024856568]}></Marker>\n//         <Marker position={[-25.73130907492065, -53.07512283325196]}></Marker>\n//         <Marker position={[-25.728583523896933, -53.061497211456306]}></Marker>\n//         <Marker position={[-25.733705961771808, -53.05866479873658]}></Marker>\n\n\n// export default Mapa\n","import { View } from 'react-native';\r\nimport Map from '../Mapa/mapaleaf'\r\n\r\n\r\nexport default function Mapa() {\r\n  return (\r\n    <Map/>\r\n  );\r\n}\r\n\r\n","import { FC } from 'react';\nimport Login from 'pages/Home';\nimport Regist from 'pages/Regist';\n// import Calendar from 'pages/Calendar';\nimport Mapa from 'pages/Mapa';\nimport {PropsGroup} from './types';\n\nconst AppRoutes: FC <PropsGroup> = function ({Drawer}: PropsGroup) {\n  return (\n    <Drawer.Group>\n      <Drawer.Screen name='Login' component={Login}/>\n      <Drawer.Screen name='Registro' component={Regist}/>\n      <Drawer.Screen name='Mapa' component={Mapa}/>\n    </Drawer.Group>\n  )\n}\n\nexport default AppRoutes\n\n","import {NavigationContainer} from '@react-navigation/native';\r\nimport {createDrawerNavigator} from '@react-navigation/drawer';\r\nimport AppRoutes from './app.routes';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nexport const screenOptions = {\r\n\r\n  headerStyle: {\r\n      backgroundColor: '#000810',\r\n  },\r\n  headerTintColor: '#fff',\r\n};\r\n\r\nfunction Routes(){\r\n  return(\r\n    <NavigationContainer>\r\n      <Drawer.Navigator initialRouteName=\"Home\" screenOptions={screenOptions}>\r\n        {AppRoutes({ Drawer })}\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import { registerRootComponent } from 'expo';\n\nimport App from './src/App.tsx';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport {FC } from 'react'\nimport Routes from 'routes';\n\n\n\nexport default function App() {\n  return <Routes/>\n}\n"],"sourceRoot":""}